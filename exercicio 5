import tkinter as tk
from tkinter import filedialog, messagebox
import os

def processar_log(conteudo):
    """Processa o conteúdo do log e extrai informações específicas."""
    linhas = conteudo.splitlines()
    entradas = []
    for linha in linhas:
        partes = linha.split(' - ')
        if len(partes) != 3:
            raise ValueError(f"Formato de log inválido: {linha}")
        timestamp, tipo, mensagem = partes
        entradas.append((timestamp, tipo, mensagem))
    return entradas

def ler_arquivo():
    """Lê o arquivo de log e exibe as informações extraídas."""
    try:
        caminho_arquivo = filedialog.askopenfilename(filetypes=[("Arquivos de Log", "*.log")])
        
        if not caminho_arquivo:
            return

        with open(caminho_arquivo, 'r', encoding='utf-8') as arquivo:
            conteudo = arquivo.read()
            
            if not conteudo.strip():
                raise ValueError("O arquivo está vazio.")
            
            entradas = processar_log(conteudo)
            atualizar_lista(entradas)
    
    except FileNotFoundError:
        messagebox.showerror("Erro", "Arquivo de log não encontrado.")
    except ValueError as ve:
        messagebox.showwarning("Formato inválido", f"Erro: {ve}")
    except UnicodeDecodeError:
        messagebox.showerror("Erro de codificação", "Erro ao ler o arquivo de log devido a um problema de codificação.")
    except Exception as e:
        messagebox.showerror("Erro inesperado", f"Ocorreu um erro inesperado: {e}")

def atualizar_lista(entradas):
    """Atualiza a lista de entradas exibida na interface."""
    lista_logs.delete(1.0, tk.END)
    for timestamp, tipo, mensagem in entradas:
        lista_logs.insert(tk.END, f"{timestamp} - {tipo} - {mensagem}\n")

root = tk.Tk()
root.title("Analisador de Logs")

open_button = tk.Button(root, text="Abrir Log", command=ler_arquivo)
open_button.pack(padx=10, pady=10)

lista_logs = tk.Text(root, wrap=tk.WORD, height=20, width=80)
lista_logs.pack(padx=10, pady=10)

root.mainloop()
